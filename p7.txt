**activity_main.xml**

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:padding="15dp"
    android:orientation="vertical"


    >
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Fetch"
        android:layout_marginTop="10dp"
        android:id="@+id/fetchBtn"
        />


    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/fetchedView"

        android:layout_marginTop="50dp"

        />


  </LinearLayout>


**Mainactivity**

package com.example.fetchdata;

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.text.method.ScrollingMovementMethod;
import android.widget.Button;
import android.widget.TextView;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class MainActivity extends AppCompatActivity {
    TextView fetchView;
    RequestQueue reqQueue;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button fetchBtn=findViewById(R.id.fetchBtn);
        fetchView=findViewById(R.id.fetchedView);
        fetchView.setMovementMethod(new ScrollingMovementMethod());
        reqQueue= Volley.newRequestQueue(this);
        fetchBtn.setOnClickListener(v->{
            getParsedData();
        });
    }
    protected void getParsedData(){
        String url="https://raw.githubusercontent.com/brai0/android7/main/contacts.json";
        JsonObjectRequest request=new JsonObjectRequest(Request.Method.GET, url, null,
                new Response.Listener<JSONObject>() {
                    @Override
                    public void onResponse(JSONObject response) {
                        try {
                            JSONArray jsonArray=response.getJSONArray("contacts");
                            for (int i=0;i<jsonArray.length();i++){
                                JSONObject user=jsonArray.getJSONObject(i);
                                String name=user.getString("name");
                                String email=user.getString("email");
                                fetchView.append("name: "+name+"\n"+"email: "+email+"\n\n");
                            }

                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                    error.fillInStackTrace();
            }
        });
        reqQueue.add(request);

    }
}


**androidmanifest**
 <uses-permission android:name="android.permission.INTERNET"/>

**gradle_script**
    implementation 'com.android.volley:volley:1.2.0'



*****another****

**mainactivity**

public class MainActivity extends AppCompatActivity {
 Button b;
 ListView lv;
 ArrayList<HashMap<String, String>>contactList;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
contactList = new ArrayList<>();
lv= (ListView) findViewById(R.id.list);
b= (Button) findViewById(R.id.fetch);
b.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
 String strUrl = "https://api.androidhive.info/contacts/";
new UrlHandler().execute(strUrl);
 }
 });
 }
public class UrlHandler extends AsyncTask<String, Integer, String> {
@Override
protected void onPostExecute(String s) {
super.onPostExecute(s);
 ListAdapter adapter = new SimpleAdapter(MainActivity.this, contactList,
 R.layout.list_item, new String[]{ "id","name","email"},
new int[]{R.id.cid,R.id.cname, R.id.cemail});
lv.setAdapter(adapter);
 }
@Override
protected String doInBackground(String... params) {
 String json_response = null;
try {
 URL url = new URL(params[0]);
 HttpURLConnection connection = (HttpURLConnection) url.openConnection();
 connection.setRequestMethod("GET");
 connection.connect();
 InputStream in = new BufferedInputStream(connection.getInputStream());
 json_response = convertStreamToString(in);
if (json_response != null) {
try {
 JSONObject jsonObj = new JSONObject(json_response);
// Getting JSON Array node
JSONArray contacts = jsonObj.getJSONArray("contacts");
// looping through All Contacts
for (int i = 0; i < contacts.length(); i++) {
 JSONObject c = contacts.getJSONObject(i);
 String id = c.getString("id");
 String name = c.getString("name");
 String email = c.getString("email");
// tmp hash map for single contact
HashMap<String, String> contact = new HashMap<>();
// adding each child node to HashMap key => value
contact.put("id", id);
 contact.put("name", name);
 contact.put("email", email);
// adding contact to contact list
contactList.add(contact);
 }
 } catch (JSONException e) {
 Log.e("error", "Json parsing error: " + e.getMessage());
 }
 } else {
 Log.e("error", "Couldn't get json from server.");
 }
 } catch (MalformedURLException e) {
 e.printStackTrace();
 } catch (IOException e) {
 e.printStackTrace();
 }
return null;
 }
private String convertStreamToString(InputStream is) {
 BufferedReader reader = new BufferedReader(new InputStreamReader(is));
 StringBuilder sb = new StringBuilder();
 String line;
try {
while ((line = reader.readLine()) != null) {
 sb.append(line).append('\n');
 }
 } catch (IOException e) {
 e.printStackTrace();
 }
return sb.toString();
 }
 }
}


**activity_main.xml**
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
xmlns:app="http://schemas.android.com/apk/res-auto"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
tools:context="nmit.mohan.com.myapplication.MainActivity">
<Button
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:text="Fetch Data"
android:id="@+id/fetch"
/>
<TextView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/textView"
/>
<ListView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/list"
></ListView>
</LinearLayout>



**list_item.xml**

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:orientation="vertical" android:layout_width="match_parent"
android:layout_height="match_parent">
<TextView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/cid"
/>
<TextView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/cname"
/>
<TextView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/cemail"
/>
</LinearLayout>





